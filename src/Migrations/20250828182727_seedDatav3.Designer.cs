// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace src.Migrations
{
    [DbContext(typeof(EmpresaContext))]
    [Migration("20250828182727_seedDatav3")]
    partial class seedDatav3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("src.Domain.Model.Funcionario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cargo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<long>("Matricula")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Cargo = "Vendedor",
                            DAdmissao = new DateTime(2000, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 1234L,
                            Nome = "João do pão"
                        },
                        new
                        {
                            Id = 2L,
                            Cargo = "Vendedor",
                            DAdmissao = new DateTime(2000, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 1235L,
                            Nome = "José da Manga"
                        },
                        new
                        {
                            Id = 3L,
                            Cargo = "Vendedor",
                            DAdmissao = new DateTime(2000, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Matricula = 1236L,
                            Nome = "Maria Madalena"
                        });
                });

            modelBuilder.Entity("src.Domain.Model.Interface.Recurso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Recurso", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("src.Domain.Model.RecursoFuncionario", b =>
                {
                    b.Property<DateTime>("DataDeAlocacao")
                        .HasColumnType("datetime2");

                    b.Property<long>("FuncionarioId")
                        .HasColumnType("bigint");

                    b.Property<long>("RecursoId")
                        .HasColumnType("bigint");

                    b.HasKey("DataDeAlocacao", "FuncionarioId", "RecursoId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("RecursoId");

                    b.ToTable("RecursoFuncionarios");

                    b.HasData(
                        new
                        {
                            DataDeAlocacao = new DateTime(2025, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FuncionarioId = 1L,
                            RecursoId = 2L
                        });
                });

            modelBuilder.Entity("src.Domain.Model.Laboratorio", b =>
                {
                    b.HasBaseType("src.Domain.Model.Interface.Recurso");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QComp")
                        .HasColumnType("int");

                    b.ToTable("Laboratorio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2L,
                            Descricao = "Laboratório destinado ao aprendizado de CG",
                            Nome = "Laboratório de computação gráfica",
                            QComp = 30
                        });
                });

            modelBuilder.Entity("src.Domain.Model.Notebook", b =>
                {
                    b.HasBaseType("src.Domain.Model.Interface.Recurso");

                    b.Property<DateTime>("DAquisicao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("NroPatrimonio")
                        .HasColumnType("bigint");

                    b.ToTable("Notebooks");

                    b.HasData(
                        new
                        {
                            Id = 3L,
                            DAquisicao = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "8 gb de ram, funciona, é da dell",
                            NroPatrimonio = 1002L
                        });
                });

            modelBuilder.Entity("src.Domain.Model.Sala", b =>
                {
                    b.HasBaseType("src.Domain.Model.Interface.Recurso");

                    b.Property<int>("Lugares")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<bool>("TemProjetor")
                        .HasColumnType("bit");

                    b.ToTable("Sala", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Lugares = 30,
                            Numero = 104,
                            TemProjetor = true
                        });
                });

            modelBuilder.Entity("src.Domain.Model.RecursoFuncionario", b =>
                {
                    b.HasOne("src.Domain.Model.Funcionario", "Funcionario")
                        .WithMany("RecursoFuncionarios")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("src.Domain.Model.Interface.Recurso", "Recurso")
                        .WithMany("RecursoFuncionarios")
                        .HasForeignKey("RecursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Recurso");
                });

            modelBuilder.Entity("src.Domain.Model.Laboratorio", b =>
                {
                    b.HasOne("src.Domain.Model.Interface.Recurso", null)
                        .WithOne()
                        .HasForeignKey("src.Domain.Model.Laboratorio", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("src.Domain.Model.Notebook", b =>
                {
                    b.HasOne("src.Domain.Model.Interface.Recurso", null)
                        .WithOne()
                        .HasForeignKey("src.Domain.Model.Notebook", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("src.Domain.Model.Sala", b =>
                {
                    b.HasOne("src.Domain.Model.Interface.Recurso", null)
                        .WithOne()
                        .HasForeignKey("src.Domain.Model.Sala", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("src.Domain.Model.Funcionario", b =>
                {
                    b.Navigation("RecursoFuncionarios");
                });

            modelBuilder.Entity("src.Domain.Model.Interface.Recurso", b =>
                {
                    b.Navigation("RecursoFuncionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
